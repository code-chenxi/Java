/*
右移运算符 >>

	它能够将一个二进制数的所有位向右移动指定的位数。右移运算符的运算规则如下：

		1. 将二进制数右移n位，相当于将数值除以2的n次方。

		2. 右移运算符对正数、负数和零的处理方式不同。
			对于正数，符号位不变，右移时左补0
			对于负数，符号位不变，右移时左补1。
			对于零，右移运算符操作后结果仍为零。

		3. 右移运算符会对溢出进行截断。

*/
public class OperatorTest06{
	public static void main(String[] args){
		/*
			原码：00000000 00000000 00000000 00000001
			反码：00000000 00000000 00000000 00000001
			补码：   00000000 00000000 00000000 00000001
			右移1位：000000000 00000000 00000000 0000000
		*/
		int a = 1;
		System.out.println(a >> 1); // 0

		/*
			00000000 00000000 0000000 10000000
			000000000000 00000000 0000000 1000
		*/
		int b = 128;
		System.out.println(b >> 4); // 8

		/*
			原码：10000000 00000000 00000000 10000000
			反码：11111111 11111111 11111111 01111111
			补码：11111111 11111111 11111111 10000000
			右移：111111111111 11111111 11111111 1000（补码）
			原码：100000000000 00000000 00000000 1000
		*/
		int c = -128;
		System.out.println(c >> 4); // -8
	}
}