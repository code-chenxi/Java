/*
	按位运算符：
		1. 左移运算符 <<

		2. 规则：
			左移n位，结果是乘以2的n次方。
		
		3. 溢出的会被截断。右侧补0.

		4. 左移的时候符号位不变。

		5. 注意：任何位运算符，操作的都是补码。
*/
public class OperatorTest05{
	public static void main(String[] args){
		
		/*
			原码：00000000 00000000 00000000 00000001
			反码：00000000 00000000 00000000 00000001
			补码：   00000000 00000000 00000000 00000001
			左移3位：00000 00000000 00000000 00000001000（补码）
		*/
		int a = 1;
		System.out.println(a << 3); // 8（1 * 2的3次方）
		
		/*
			原码：00000000 00000000 00000000 10000000
			反码：00000000 00000000 00000000 10000000
			补码：   00000000 00000000 00000000 10000000
			左移2位：000000 00000000 00000000 1000000000
		*/
		int b = 128;
		System.out.println(b << 2); // 512（128 * 2的2次方）

		
		/*
			原码：10000000 00000000 00000000 01100100
			反码：11111111 11111111 11111111 10011011
			补码：   11111111 11111111 11111111 10011100
			左移2位：111111 11111111 11111111 1001110000（补码）
			原码：   100000 00000000 00000000 0110010000
		*/
		int c = -100;
		System.out.println(c << 2); // -400（-100 * 2的2次方）


		/*
			经典面试题：怎么让2快速变成8？
		*/
		int x = 2;

		//System.out.println(x * 4);

		System.out.println(x << 2);

	}
}